/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.myproject.Form;

import com.myproject.DAO.ChamCongDao;
import com.myproject.DAO.NhanVienDao;
import com.myproject.DAO.SanPhamDao;
import com.myproject.Model.NhanVien;
import com.myproject.Model.SanPham;
import com.myproject.UI.Application;
import com.myproject.Utils.DateHelper;
import com.myproject.swing.ScrollBar;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.text.NumberFormat;
import java.util.Date;
import java.util.HashSet;
import java.util.List;
import java.util.Locale;
import java.util.Set;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.SwingUtilities;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author PC
 */
public class Form_QLYSANPHAM extends javax.swing.JPanel {

    private SanPhamDao sanPhamDao;
    private NhanVienDao nhanVienDao;
    private ChamCongDao chamCongDao;

    private static final double GIA_CO_BAN = 300000;

    /**
     * Creates new form Form_QLYSANPHAM
     */
    public Form_QLYSANPHAM() {
        initComponents();
        spTable.setVerticalScrollBar(new ScrollBar());
        sanPhamDao = new SanPhamDao();
        nhanVienDao = new NhanVienDao();
        chamCongDao = new ChamCongDao();
        // Đặt giá trị mặc định cho txtGiaTienMotCong nếu cần
        txtGiaTienMotCong.setText("300000");
        add(txtGiaTienMotCong);

        // Tiếp tục với phần còn lại của khởi tạo
        txtGiaTien.setEditable(false);
        txtSoCong.setText("1"); // Đặt giá trị mặc định cho Số Công
        updateGiaTien(); // Đặt giá trị mặc định cho Giá Tiền
        //loadTableData();
        addDocumentListenerToSoCong();
        customComboBox1.setEditable(true);
        loadSP();
        loadNhanVien();
        loadNgay();
        loadOption();
    }

   @Override
public void addNotify() {
    super.addNotify();
    adjustPanelSize();
}
 private void adjustPanelSize() {
    // Get the screen dimensions
    Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
    int screenHeight = screenSize.height;
    
  int phandauHeight = p_phandau.getHeight();
    
    // Get the height of Header from the Application class
    Application application = (Application) SwingUtilities.getWindowAncestor(this);
    JPanel headerPanel = application.getHeader();
    int headerHeight = headerPanel.getHeight();

    // Calculate the new height for p_sanpham
    int newNhanVienPanelHeight = screenHeight - (450 + headerHeight);
    System.out.println("Độ dài của phandauHeight"+phandauHeight);
    System.out.println("Độ dài của headerPanel"+headerHeight);
    System.out.println("Độ dài của p_sanpham"+newNhanVienPanelHeight);

    // Set the new size for p_sanpham
    setSizeTable(p_sanpham, p_sanpham.getWidth(), newNhanVienPanelHeight);
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel5 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        p_phandau = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        txtTimKiem = new javax.swing.JTextField();
        jPanel13 = new javax.swing.JPanel();
        btnTimKiem = new com.myproject.swing.Button();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        btnAdd = new com.myproject.swing.Button();
        btnEdit = new com.myproject.swing.Button();
        btnDelete = new com.myproject.swing.Button();
        btnLamMoi = new com.myproject.swing.Button();
        btnHienThiTable = new com.myproject.swing.Button();
        jPanel8 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtTapPhim = new javax.swing.JTextField();
        customComboBox1 = new com.myproject.swing.CustomComboBox();
        customComboBox2 = new com.myproject.swing.CustomComboBox();
        jLabel7 = new javax.swing.JLabel();
        txtMaSP = new javax.swing.JTextField();
        jPanel14 = new javax.swing.JPanel();
        txtSoCong = new javax.swing.JTextField();
        txtGiaTienMotCong = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        txtGiaTien = new javax.swing.JTextField();
        txtNgayGiao = new javax.swing.JTextField();
        txtViPham = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        p_sanpham = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        btn_phong = new javax.swing.JPanel();
        btn_setSize = new javax.swing.JLabel();
        jPanel15 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        customComboBox3 = new com.myproject.swing.CustomComboBox();
        jPanel11 = new javax.swing.JPanel();
        spTable = new javax.swing.JScrollPane();
        tbl_SanPham = new com.myproject.swing.Table();

        jLabel5.setFont(new java.awt.Font("Segoe UI Semilight", 0, 18)); // NOI18N
        jLabel5.setText("Số công");

        jLabel8.setFont(new java.awt.Font("Segoe UI Semilight", 0, 18)); // NOI18N
        jLabel8.setText("Giá tiền một công ");

        jLabel6.setFont(new java.awt.Font("Segoe UI Semilight", 0, 18)); // NOI18N
        jLabel6.setText("Giá tiền");

        setBackground(new java.awt.Color(227, 224, 224));
        setLayout(new java.awt.BorderLayout());

        p_phandau.setBackground(new java.awt.Color(227, 224, 224));
        p_phandau.setPreferredSize(new java.awt.Dimension(1100, 390));
        p_phandau.setRequestFocusEnabled(false);
        p_phandau.setLayout(new java.awt.BorderLayout());

        jPanel3.setBackground(new java.awt.Color(204, 204, 255));
        jPanel3.setPreferredSize(new java.awt.Dimension(1060, 60));

        jPanel6.setBackground(new java.awt.Color(204, 204, 255));
        jPanel6.setLayout(new javax.swing.BoxLayout(jPanel6, javax.swing.BoxLayout.LINE_AXIS));

        jPanel12.setBackground(new java.awt.Color(227, 224, 224));
        jPanel12.setPreferredSize(new java.awt.Dimension(733, 100));

        txtTimKiem.setFont(new java.awt.Font("Segoe UI Semilight", 0, 18)); // NOI18N
        txtTimKiem.setDisabledTextColor(new java.awt.Color(204, 204, 204));
        txtTimKiem.setSelectionColor(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGap(222, 222, 222)
                .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 568, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel12Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26))
        );

        jPanel6.add(jPanel12);

        jPanel13.setBackground(new java.awt.Color(227, 224, 224));
        jPanel13.setPreferredSize(new java.awt.Dimension(200, 78));

        btnTimKiem.setBackground(new java.awt.Color(0, 0, 0));
        btnTimKiem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/myproject/Image/search_26px.png"))); // NOI18N
        btnTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(428, Short.MAX_VALUE))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        jPanel6.add(jPanel13);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, 74, Short.MAX_VALUE)
        );

        p_phandau.add(jPanel3, java.awt.BorderLayout.PAGE_START);

        jPanel4.setBackground(new java.awt.Color(227, 224, 224));
        jPanel4.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel4.setFocusCycleRoot(true);
        jPanel4.setPreferredSize(new java.awt.Dimension(1266, 374));
        jPanel4.setLayout(new java.awt.BorderLayout());

        jPanel5.setBackground(new java.awt.Color(227, 224, 224));
        jPanel5.setPreferredSize(new java.awt.Dimension(200, 362));

        btnAdd.setBackground(new java.awt.Color(51, 51, 255));
        btnAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/myproject/Image/icons8-add-24.png"))); // NOI18N
        btnAdd.setText("Thêm");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnEdit.setBackground(new java.awt.Color(51, 51, 255));
        btnEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/myproject/Image/icons8-edit-24.png"))); // NOI18N
        btnEdit.setText("Cập nhật");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnDelete.setBackground(new java.awt.Color(51, 51, 255));
        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/myproject/Image/icons8-delete-24.png"))); // NOI18N
        btnDelete.setText("Xóa");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnLamMoi.setBackground(new java.awt.Color(51, 51, 255));
        btnLamMoi.setText("Làm mới");
        btnLamMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLamMoiActionPerformed(evt);
            }
        });

        btnHienThiTable.setBackground(new java.awt.Color(51, 51, 255));
        btnHienThiTable.setText("Danh sách");
        btnHienThiTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHienThiTableActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnEdit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnLamMoi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnHienThiTable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(36, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23)
                .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23)
                .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23)
                .addComponent(btnLamMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23)
                .addComponent(btnHienThiTable, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(10, Short.MAX_VALUE))
        );

        jPanel4.add(jPanel5, java.awt.BorderLayout.LINE_END);

        jPanel8.setLayout(new javax.swing.BoxLayout(jPanel8, javax.swing.BoxLayout.LINE_AXIS));

        jPanel10.setBackground(new java.awt.Color(227, 224, 224));
        jPanel10.setPreferredSize(new java.awt.Dimension(430, 362));

        jLabel1.setFont(new java.awt.Font("Segoe UI Semilight", 0, 18)); // NOI18N
        jLabel1.setText("Nhân viên");
        jLabel1.setToolTipText("");

        jLabel2.setFont(new java.awt.Font("Segoe UI Semilight", 0, 18)); // NOI18N
        jLabel2.setText("Tên sản phẩm");
        jLabel2.setToolTipText("");

        jLabel3.setFont(new java.awt.Font("Segoe UI Semilight", 0, 18)); // NOI18N
        jLabel3.setText("Tập phim");

        txtTapPhim.setFont(new java.awt.Font("Segoe UI Semilight", 0, 18)); // NOI18N

        customComboBox1.setFont(new java.awt.Font("Segoe UI Semilight", 0, 18)); // NOI18N

        customComboBox2.setFont(new java.awt.Font("Segoe UI Semilight", 0, 18)); // NOI18N
        customComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customComboBox2ActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Segoe UI Semilight", 0, 18)); // NOI18N
        jLabel7.setText("Mã sản phẩm");
        jLabel7.setToolTipText("");

        txtMaSP.setEditable(false);
        txtMaSP.setFont(new java.awt.Font("Segoe UI Semilight", 0, 18)); // NOI18N
        txtMaSP.setDisabledTextColor(new java.awt.Color(204, 204, 204));
        txtMaSP.setSelectionColor(new java.awt.Color(255, 255, 255));
        txtMaSP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMaSPActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtTapPhim)
                    .addComponent(customComboBox1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(customComboBox2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3)
                    .addComponent(jLabel7)
                    .addComponent(txtMaSP, javax.swing.GroupLayout.DEFAULT_SIZE, 520, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap(28, Short.MAX_VALUE)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtMaSP, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(customComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(customComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtTapPhim, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
        );

        jPanel8.add(jPanel10);

        jPanel14.setBackground(new java.awt.Color(227, 224, 224));
        jPanel14.setPreferredSize(new java.awt.Dimension(430, 362));

        txtSoCong.setFont(new java.awt.Font("Segoe UI Semilight", 0, 18)); // NOI18N

        txtGiaTienMotCong.setFont(new java.awt.Font("Segoe UI Semilight", 0, 18)); // NOI18N

        jLabel9.setFont(new java.awt.Font("Segoe UI Semilight", 0, 18)); // NOI18N
        jLabel9.setText("Số công");

        jLabel10.setFont(new java.awt.Font("Segoe UI Semilight", 0, 18)); // NOI18N
        jLabel10.setText("Giá tiền một công ");

        jLabel11.setFont(new java.awt.Font("Segoe UI Semilight", 0, 18)); // NOI18N
        jLabel11.setText("Ngày giao");

        jLabel13.setFont(new java.awt.Font("Segoe UI Semilight", 0, 18)); // NOI18N
        jLabel13.setText("Giá tiền");

        txtGiaTien.setFont(new java.awt.Font("Segoe UI Semilight", 0, 18)); // NOI18N
        txtGiaTien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtGiaTienActionPerformed(evt);
            }
        });

        txtNgayGiao.setEditable(false);
        txtNgayGiao.setFont(new java.awt.Font("Segoe UI Semilight", 0, 18)); // NOI18N

        txtViPham.setFont(new java.awt.Font("Segoe UI Semilight", 0, 18)); // NOI18N
        txtViPham.setText("0");

        jLabel14.setFont(new java.awt.Font("Segoe UI Semilight", 0, 18)); // NOI18N
        jLabel14.setText("Vi Phạm");

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtGiaTien)
                    .addComponent(txtGiaTienMotCong, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel14Layout.createSequentialGroup()
                                .addComponent(txtNgayGiao, javax.swing.GroupLayout.DEFAULT_SIZE, 287, Short.MAX_VALUE)
                                .addGap(102, 102, 102))
                            .addGroup(jPanel14Layout.createSequentialGroup()
                                .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtViPham, javax.swing.GroupLayout.DEFAULT_SIZE, 132, Short.MAX_VALUE)
                            .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtSoCong))
                .addContainerGap())
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtSoCong, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtGiaTienMotCong, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(9, 9, 9)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtGiaTien, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jLabel14))
                .addGap(6, 6, 6)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtViPham, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNgayGiao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        jPanel8.add(jPanel14);

        jPanel4.add(jPanel8, java.awt.BorderLayout.CENTER);

        p_phandau.add(jPanel4, java.awt.BorderLayout.CENTER);

        add(p_phandau, java.awt.BorderLayout.PAGE_START);

        p_sanpham.setBackground(new java.awt.Color(255, 204, 255));
        p_sanpham.setPreferredSize(new java.awt.Dimension(1266, 330));
        p_sanpham.setLayout(new java.awt.BorderLayout());

        jPanel9.setBackground(new java.awt.Color(227, 224, 224));
        jPanel9.setPreferredSize(new java.awt.Dimension(1110, 40));
        jPanel9.setLayout(new java.awt.BorderLayout());

        jPanel7.setBackground(new java.awt.Color(227, 224, 224));

        btn_phong.setBackground(new java.awt.Color(227, 224, 224));
        btn_phong.setLayout(new java.awt.BorderLayout());

        btn_setSize.setBackground(new java.awt.Color(227, 224, 224));
        btn_setSize.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btn_setSize.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/myproject/Image/maximize.png"))); // NOI18N
        btn_setSize.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_setSizeMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btn_setSizeMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btn_setSizeMouseExited(evt);
            }
        });
        btn_phong.add(btn_setSize, java.awt.BorderLayout.CENTER);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(btn_phong, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btn_phong, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel9.add(jPanel7, java.awt.BorderLayout.LINE_END);

        jPanel15.setBackground(new java.awt.Color(227, 224, 224));

        jLabel12.setFont(new java.awt.Font("Segoe UI Semilight", 1, 24)); // NOI18N
        jLabel12.setText("BẢNG SẢN PHẨM");

        customComboBox3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Theo nhân viên", "Tất cả" }));
        customComboBox3.setFont(new java.awt.Font("Segoe UI Semilight", 0, 18)); // NOI18N
        customComboBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customComboBox3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel12)
                .addGap(18, 18, 18)
                .addComponent(customComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(669, Short.MAX_VALUE))
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                    .addComponent(customComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel9.add(jPanel15, java.awt.BorderLayout.CENTER);

        p_sanpham.add(jPanel9, java.awt.BorderLayout.PAGE_START);

        jPanel11.setBackground(new java.awt.Color(227, 224, 224));

        spTable.setBorder(null);

        tbl_SanPham.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        tbl_SanPham.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã SP", "Tên sản phẩm", "Tập", "Thời lượng", "Số công", "Giá tiền", "Vi Phạm", "Ngày giao"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl_SanPham.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_SanPhamMouseClicked(evt);
            }
        });
        spTable.setViewportView(tbl_SanPham);

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(spTable, javax.swing.GroupLayout.DEFAULT_SIZE, 1254, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(spTable, javax.swing.GroupLayout.DEFAULT_SIZE, 278, Short.MAX_VALUE)
                .addContainerGap())
        );

        p_sanpham.add(jPanel11, java.awt.BorderLayout.CENTER);

        add(p_sanpham, java.awt.BorderLayout.PAGE_END);
    }// </editor-fold>//GEN-END:initComponents

    private void txtGiaTienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtGiaTienActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtGiaTienActionPerformed

    private void customComboBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customComboBox3ActionPerformed
        // TODO add your handling code here:
loadOption();
    }//GEN-LAST:event_customComboBox3ActionPerformed

    private void customComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customComboBox2ActionPerformed
        // TODO add your handling code here:
loadOption();
    }//GEN-LAST:event_customComboBox2ActionPerformed

    private void txtMaSPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMaSPActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_txtMaSPActionPerformed

    private void loadOption(){
        if(customComboBox3.getSelectedIndex() == 0){
            loadDataByNV();
        }
        if(customComboBox3.getSelectedIndex() == 1){
            loadTableData();
        }
    }
    
    private void loadDataByNV() {
        String hovaten = String.valueOf(customComboBox2.getSelectedItem());
        if (hovaten.isEmpty()) {
            return;
        }
        int manv = -1;
        manv = getMaNhanVienFromFullName(hovaten);
        if (manv == -1) {
            return;
        }
        DefaultTableModel model = (DefaultTableModel) tbl_SanPham.getModel();
        model.setRowCount(0); // Xóa các hàng hiện tại

        List<SanPham> sanPhams = sanPhamDao.getAllSanPhamByMaNV(manv);
        NumberFormat currencyFormat = NumberFormat.getCurrencyInstance(new Locale("vi", "VN"));

        for (SanPham sp : sanPhams) {
            //System.out.println("Ok");
//            if(sp.getNhanVien().getMaNhanVien() != manv){
//                continue;
//            }
            Object[] row = new Object[]{
                sp.getMaSanPham(),
                sp.getTenSanPham(),
                sp.getTapPhim(),
                sp.getThoiLuong() % 1 == 0 ? (int) sp.getThoiLuong() : sp.getThoiLuong(), // Hiển thị thời lượng
                // dưới dạng số nguyên nếu
                // không có phần thập phân
                sp.getSoCong(),
                currencyFormat.format(sp.getGiaSP()),
                // "[" + String.valueOf(sp.getNhanVien().getMaNhanVien()).trim() + "] " + String.valueOf(sp.getNhanVien().getHoVaTen()).trim(),
                sp.getViPham(),
                DateHelper.formatYYToDD(String.valueOf(sp.getNgayGiao()))
            };
            model.addRow(row);
        }

    }

    private void btnTimKiemActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnTimKiemActionPerformed
        // Lấy từ khóa tìm kiếm từ trường nhập liệu
        String keyword = txtTimKiem.getText().trim();

        // Validate
        if (keyword.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập từ khóa tìm kiếm.", "Thông báo",
                    JOptionPane.WARNING_MESSAGE);
            txtTimKiem.requestFocus();
            return;
        }

        try {
            // Gọi phương thức tìm kiếm sản phẩm theo tên từ DAO và cập nhật bảng
            List<SanPham> searchResults = sanPhamDao.searchSanPhamByName(keyword);
            updateTableData(searchResults);
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Lỗi khi tìm kiếm sản phẩm: " + e.getMessage(), "Thông báo",
                    JOptionPane.ERROR_MESSAGE);
        }
    }// GEN-LAST:event_btnTimKiemActionPerformed

    private int getMaNhanVienFromFullName(String fullname) {
        if (fullname.contains("[") && fullname.contains("]")) {

        } else {
            return -1;
        }
        int start = 0;
        int end = 0;
        int manv = -1;
        start = fullname.indexOf("[");
        end = fullname.indexOf("]");
        String ss = fullname.substring(start, end + 1);
        manv = Integer.parseInt(ss.replace("[", "").replace("]", ""));

        return manv;
    }

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        if (!validateForm()) {

            JOptionPane.showMessageDialog(this, "Vui lòng nhập đầy đủ thông tin", "Thông báo",
                    JOptionPane.ERROR_MESSAGE);

            return; // Exit method if form validation fails
        }

        String hotennv = String.valueOf(customComboBox2.getSelectedItem());
        int manv = -1;
        manv = getMaNhanVienFromFullName(hotennv);
        if (manv == -1) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập đầy đủ thông tin", "Thông báo",
                    JOptionPane.ERROR_MESSAGE);

            return; // Exit method if form validation fails
        }

        try {
            // Lấy dữ liệu từ các trường nhập liệu
            String tenSanPham = String.valueOf(customComboBox1.getSelectedItem());

            int tapPhim = Integer.parseInt(txtTapPhim.getText());
            SanPham sp = sanPhamDao.getSanPhamTonTai(tenSanPham, tapPhim);
            if (sp != null) {
                JOptionPane.showMessageDialog(this, "Đã tồn tại tập phim " + tapPhim + " của " + tenSanPham,
                        "Thông báo",
                        JOptionPane.ERROR_MESSAGE);
                return;
            }
            //   float thoiLuong = Float.parseFloat(txtThoiLuong.getText());
            float soCong = Float.valueOf(txtSoCong.getText());

            // Tính toán giá tiền dựa trên số công và giá tiền một công từ txtGiaTienMotCong
            double giaTienMotCong = Double.parseDouble(txtGiaTienMotCong.getText());
            double giaTien = giaTienMotCong * soCong;

            // Tạo đối tượng SanPham và liên kết với GiaSP
            SanPham sanPham = new SanPham();
            sanPham.setTenSanPham(tenSanPham);
            sanPham.setTapPhim(tapPhim);
            //   sanPham.setThoiLuong(thoiLuong);
            sanPham.setSoCong(soCong);
            sanPham.setGiaSP(giaTien);
            String viPham = "0";
            viPham = txtViPham.getText();
            sanPham.setViPham(Integer.valueOf(viPham.trim()));
            NhanVien nhanVien = nhanVienDao.getNhanVienById(manv);
            sanPham.setNhanVien(nhanVien);
            sanPham.setNgayGiao(new Date());
            // Lưu SanPham vào cơ sở dữ liệu
            sanPhamDao.addSanPham(sanPham);
            // them sp

            // Cập nhật bảng sau khi thêm sản phẩm thành công
            loadTableData();
            loadSP();
            JOptionPane.showMessageDialog(this, "Thêm sản phẩm thành công!");
            btnResetActionPerformed(evt); // Đặt lại các trường nhập liệu

        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Lỗi khi thêm sản phẩm: " + e.getMessage(), "Thông báo",
                    JOptionPane.ERROR_MESSAGE);
        }
    }// GEN-LAST:event_btnAddActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnEditActionPerformed
        if (!validateForm()) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập đầy đủ thông tin", "Thông báo",
                    JOptionPane.ERROR_MESSAGE);
            return; // Exit method if form validation fails
        }

        String hotennv = String.valueOf(customComboBox2.getSelectedItem());
        int manv = -1;
        manv = getMaNhanVienFromFullName(hotennv);
        if (manv == -1) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập đầy đủ thông tin", "Thông báo",
                    JOptionPane.ERROR_MESSAGE);

            return; // Exit method if form validation fails
        }

        try {
            // Lấy dữ liệu từ các trường nhập liệu
            int maSanPham = Integer.parseInt(txtMaSP.getText());
            String tenSanPham = String.valueOf(customComboBox1.getSelectedItem());
            int tapPhim = Integer.parseInt(txtTapPhim.getText());
            //   float thoiLuong = Float.parseFloat(txtThoiLuong.getText());
            float soCong = Float.valueOf(txtSoCong.getText());

            // Tính toán giá tiền dựa trên số công và giá tiền một công từ txtGiaTienMotCong
            double giaTienMotCong = Double.parseDouble(txtGiaTienMotCong.getText());
            double giaTien = giaTienMotCong * soCong;
            int viPham = 0;
            viPham = Integer.valueOf(txtViPham.getText().trim());
            // Tìm sản phẩm và cập nhật thông tin
            SanPham sanPham = sanPhamDao.getSanPhamById(maSanPham);
            if (sanPham != null) {
                sanPham.setViPham(viPham);
                NhanVien nhanVien = nhanVienDao.getNhanVienById(manv);
                sanPham.setNhanVien(nhanVien);
                sanPham.setTenSanPham(tenSanPham);
                sanPham.setTapPhim(tapPhim);
                //   sanPham.setThoiLuong(thoiLuong);
                sanPham.setSoCong(soCong);
                sanPham.setGiaSP(giaTien);
                sanPhamDao.updateSanPham(sanPham);

                // Cập nhật bảng sau khi chỉnh sửa sản phẩm thành công
                loadTableData();
                JOptionPane.showMessageDialog(this, "Chỉnh sửa sản phẩm thành công!");
            } else {
                JOptionPane.showMessageDialog(this, "Sản phẩm không tồn tại!", "Thông báo", JOptionPane.ERROR_MESSAGE);
            }

        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Lỗi khi chỉnh sửa sản phẩm: " + e.getMessage(), "Thông báo",
                    JOptionPane.ERROR_MESSAGE);
        }
    }// GEN-LAST:event_btnEditActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        try {
            // Lấy mã sản phẩm từ trường nhập liệu
            int maSanPham = Integer.parseInt(txtMaSP.getText());

            // Xóa sản phẩm khỏi cơ sở dữ liệu
            sanPhamDao.deleteSanPham(maSanPham);

            // Cập nhật bảng sau khi xóa sản phẩm thành công
            loadTableData();
            JOptionPane.showMessageDialog(this, "Xóa sản phẩm thành công!");
            btnResetActionPerformed(evt); // Đặt lại các trường nhập liệu

        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Lỗi khi xóa sản phẩm: " + e.getMessage(), "Thông báo",
                    JOptionPane.ERROR_MESSAGE);
        }
    }// GEN-LAST:event_btnDeleteActionPerformed

    private void btnLamMoiActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnLamMoiActionPerformed
        txtMaSP.setText("");
        customComboBox1.setSelectedItem("");
        txtTapPhim.setText("");
        //   txtThoiLuong.setText("");
        txtSoCong.setText("1.0"); // Đặt giá trị mặc định cho Số Công
        updateGiaTien(); // Đặt giá trị mặc định cho Giá Tiền

    }// GEN-LAST:event_btnLamMoiActionPerformed

    private void btnHienThiTableActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnHienThiTableActionPerformed
        // TODO add your handling code here:
        loadTableData();

    }// GEN-LAST:event_btnHienThiTableActionPerformed

    private void loadNgay() {
        txtNgayGiao.setText(DateHelper.formatDate(new Date()));
    }

    private void tbl_SanPhamMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_tbl_SanPhamMouseClicked
        int selectedRow = tbl_SanPham.getSelectedRow();
        if (selectedRow >= 0) {
            DefaultTableModel model = (DefaultTableModel) tbl_SanPham.getModel();
            txtMaSP.setText(model.getValueAt(selectedRow, 0).toString());
            customComboBox1.setSelectedItem(model.getValueAt(selectedRow, 1).toString());
            txtTapPhim.setText(model.getValueAt(selectedRow, 2).toString());
            //     txtThoiLuong.setText(model.getValueAt(selectedRow, 3).toString());
            txtSoCong.setText(model.getValueAt(selectedRow, 4).toString());
            Object giaTienObj = model.getValueAt(selectedRow, 5);
            txtGiaTien.setText(giaTienObj != null ? giaTienObj.toString() : "");
            customComboBox2.setSelectedItem(String.valueOf(model.getValueAt(selectedRow, 6)).trim());
            String ngayGiao = String.valueOf(model.getValueAt(selectedRow, 8));
            txtNgayGiao.setText(ngayGiao);
            txtViPham.setText(String.valueOf(model.getValueAt(selectedRow, 7)));
        }
    }// GEN-LAST:event_tbl_SanPhamMouseClicked

    private void btn_setSizeMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_btn_setSizeMouseClicked

        int newHeight;

        if (p_phandau.isVisible()) {
            p_phandau.setVisible(false);
            newHeight = 720;
        } else {
            p_phandau.setVisible(true);
            newHeight = 330;

        }

        setSizeTable(p_sanpham, getWidth(), newHeight);

    }// GEN-LAST:event_btn_setSizeMouseClicked

    private void btn_setSizeMouseEntered(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_btn_setSizeMouseEntered
        changecolor(btn_phong, new Color(204, 204, 204));
    }// GEN-LAST:event_btn_setSizeMouseEntered

    private void btn_setSizeMouseExited(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_btn_setSizeMouseExited
        changecolor(btn_phong, new Color(227, 224, 224));
    }// GEN-LAST:event_btn_setSizeMouseExited

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.myproject.swing.Button btnAdd;
    private com.myproject.swing.Button btnDelete;
    private com.myproject.swing.Button btnEdit;
    private com.myproject.swing.Button btnHienThiTable;
    private com.myproject.swing.Button btnLamMoi;
    private com.myproject.swing.Button btnTimKiem;
    private javax.swing.JPanel btn_phong;
    private javax.swing.JLabel btn_setSize;
    private com.myproject.swing.CustomComboBox customComboBox1;
    private com.myproject.swing.CustomComboBox customComboBox2;
    private com.myproject.swing.CustomComboBox customComboBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JPanel p_phandau;
    private javax.swing.JPanel p_sanpham;
    private javax.swing.JScrollPane spTable;
    private com.myproject.swing.Table tbl_SanPham;
    private javax.swing.JTextField txtGiaTien;
    private javax.swing.JTextField txtGiaTienMotCong;
    private javax.swing.JTextField txtMaSP;
    private javax.swing.JTextField txtNgayGiao;
    private javax.swing.JTextField txtSoCong;
    private javax.swing.JTextField txtTapPhim;
    private javax.swing.JTextField txtTimKiem;
    private javax.swing.JTextField txtViPham;
    // End of variables declaration//GEN-END:variables

    public void setSizeTable(JPanel panel, int width, int height) {
        panel.setPreferredSize(new Dimension(width, height));
        panel.revalidate();
        panel.repaint();
    }

    public void changecolor(JPanel hover, Color rand) {
        hover.setBackground(rand);
    }

    private void loadTableData() {
//        String hotennv = String.valueOf(customComboBox2.getSelectedItem());
//        if(hotennv.isEmpty()){
//            
//            return;
//        }
//        int manv = -1;
//        manv = getMaNhanVienFromFullName(hotennv);
//        if(manv == -1){
//            return;
//        }
        List<SanPham> sanPhams = sanPhamDao.getAllSanPhams();
        DefaultTableModel model = (DefaultTableModel) tbl_SanPham.getModel();
        model.setRowCount(0); // Xóa các hàng hiện tại

        NumberFormat currencyFormat = NumberFormat.getCurrencyInstance(new Locale("vi", "VN"));

        for (SanPham sp : sanPhams) {
            //System.out.println("Ok");
//            if(sp.getNhanVien().getMaNhanVien() != manv){
//                continue;
//            }
            Object[] row = new Object[]{
                sp.getMaSanPham(),
                sp.getTenSanPham(),
                sp.getTapPhim(),
                sp.getThoiLuong() % 1 == 0 ? (int) sp.getThoiLuong() : sp.getThoiLuong(), // Hiển thị thời lượng
                // dưới dạng số nguyên nếu
                // không có phần thập phân
                sp.getSoCong(),
                currencyFormat.format(sp.getGiaSP()),
                // "[" + String.valueOf(sp.getNhanVien().getMaNhanVien()).trim() + "] " + String.valueOf(sp.getNhanVien().getHoVaTen()).trim(),
                sp.getViPham(),
                DateHelper.formatYYToDD(String.valueOf(sp.getNgayGiao()))
            };
            model.addRow(row);
        }
    }

    private void updateGiaTien() {
        try {
            float soCong = Float.valueOf(txtSoCong.getText());
            double giaTienMotCong = Double.parseDouble(txtGiaTienMotCong.getText());
            double giaTien = giaTienMotCong * soCong;
            NumberFormat currencyFormat = NumberFormat.getCurrencyInstance(new Locale("vi", "VN"));
            txtGiaTien.setText(currencyFormat.format(giaTien));
        } catch (NumberFormatException e) {
            txtGiaTien.setText("");
        }
    }

    private void addDocumentListenerToSoCong() {
        txtSoCong.getDocument().addDocumentListener(new DocumentListener() {
            public void insertUpdate(DocumentEvent e) {
                updateGiaTien();
            }

            public void removeUpdate(DocumentEvent e) {
                updateGiaTien();
            }

            public void changedUpdate(DocumentEvent e) {
                updateGiaTien();
            }
        });

        txtGiaTienMotCong.getDocument().addDocumentListener(new DocumentListener() {
            public void insertUpdate(DocumentEvent e) {
                updateGiaTien();
            }

            public void removeUpdate(DocumentEvent e) {
                updateGiaTien();
            }

            public void changedUpdate(DocumentEvent e) {
                updateGiaTien();
            }
        });
    }

    // Thêm sự kiện lắng nghe cho txtGiaTienMotCong
    private void addDocumentListenerToGiaTienMotCong() {
        txtGiaTienMotCong.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                updateGiaTien();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                updateGiaTien();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                updateGiaTien();
            }
        });
    }

    private void updateTableData(List<SanPham> sanPhams) {
        DefaultTableModel model = (DefaultTableModel) tbl_SanPham.getModel();
        model.setRowCount(0); // Xóa các hàng hiện tại

        NumberFormat currencyFormat = NumberFormat.getCurrencyInstance(new Locale("vi", "VN"));

        for (SanPham sp : sanPhams) {
            Object[] row = new Object[]{
                sp.getMaSanPham(),
                sp.getTenSanPham(),
                sp.getTapPhim(),
                sp.getThoiLuong() % 1 == 0 ? (int) sp.getThoiLuong() : sp.getThoiLuong(), // Hiển thị thời lượng
                // dưới dạng số nguyên nếu
                // không có phần thập phân
                sp.getSoCong(),
                currencyFormat.format(sp.getGiaSP()),
                sp.getViPham(),
                DateHelper.formatYYToDD(String.valueOf(sp.getNgayGiao()))
            };
            model.addRow(row);
        }
    }

    // validate form
    private boolean validateForm() {

        // Validate Tên sản phẩm (txtTenSP)
        String tenSP = String.valueOf(customComboBox1.getSelectedItem());
        if (tenSP.isEmpty()) {
            return false;
        }

        // Validate Tập phim (txtTapPhim)
        String tapPhimText = txtTapPhim.getText().trim();
        if (tapPhimText.isEmpty()) {
            return false;
        } else {
            try {
                int tapPhim = Integer.parseInt(tapPhimText);
                if (tapPhim < 0) {
                    return false;
                }
            } catch (NumberFormatException e) {
                return false;
            }
        }

        // Validate Thời lượng (txtThoiLuong)
        //    String thoiLuongText = txtThoiLuong.getText().trim();
//        if (thoiLuongText.isEmpty()) {
//            return false;
//        } else {
//            try {
//                float thoiLuong = Float.parseFloat(thoiLuongText);
//                if (thoiLuong < 0) {
//                    return false;
//                }
//            } catch (NumberFormatException e) {
//                return false;
//            }
//        }
        // Validate Số công (txtSoCong)
        String soCongText = txtSoCong.getText().trim();
        if (soCongText.isEmpty()) {
            return false;
        } else {
            try {
                float soCong = Float.valueOf(soCongText);
                if (soCong < 0) {
                    return false;
                }
            } catch (NumberFormatException e) {
                return false;
            }
        }

        return true;
    }

    public JPanel getPanel() {
        return p_sanpham;
    }

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        txtMaSP.setText("");
        customComboBox1.setSelectedItem("");
        txtTapPhim.setText("");
        //   txtThoiLuong.setText("");
        txtSoCong.setText("1"); // Đặt giá trị mặc định cho Số Công
        updateGiaTien(); // Đặt giá trị mặc định cho Giá Tiền
    }

    private void loadNhanVien() {
        customComboBox2.removeAllItems();
        List<NhanVien> list = nhanVienDao.getAllNhanViens();
        if (list != null) {
            for (NhanVien nhanVien : list) {
                customComboBox2.addItem("[" + nhanVien.getMaNhanVien() + "] " + nhanVien.getHoVaTen());
            }
        }

    }

    private void loadSP() {
        customComboBox1.removeAllItems();
        Set<String> list = new HashSet<>();
        List<SanPham> ls = sanPhamDao.getAllSanPhams();
        for (SanPham l : ls) {
            list.add(l.getTenSanPham());

        }
        for (String string : list) {
            customComboBox1.addItem(string);
        }
    }
}
